{"version":3,"sources":["Header/index.js","Footer/index.js","Calculator/Container/index.js","Calculator/index.js","currencies.js","Calculator/Form/index.js","Calculator/Result/index.js","Calculator/Form/Clock/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","Footer","Container","children","Calculator","body","result","currencies","content","name","rate","Form","calculateResult","clock","useState","amount","setAmount","selectedCurrency","setSelectedCurrency","click","setClick","inputRef","useRef","onSubmit","event","preventDefault","value","onChange","target","autoFocus","required","length","type","min","step","ref","map","currency","onClick","current","focus","Result","selectedRate","undefined","inputAmount","toFixed","outputAmount","toUpperCase","Clock","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","toLocaleString","weekday","day","month","hour","minute","second","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.999c9f1b.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n        © 2021 Wszelkie prawa zastrzeżone\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n   <div className=\"container\">\r\n      {children}\r\n   </div>\r\n);\r\n\r\nexport default Container;","import \"./style.css\";\r\nimport Container from \"./Container\";\r\n\r\nconst Calculator = ({ body, result }) => (\r\n   <section className=\"calculator\">\r\n      <Container>\r\n         {body}\r\n         {result}\r\n      </Container>\r\n   </section>\r\n);\r\n\r\nexport default Calculator;","\r\nconst currencies = [\r\n    { content: \"eur\", name: \"Euro\", rate: 0.22 },\r\n    { content: \"usd\", name: \"USD - dolar amerykański\", rate: 0.25 },\r\n    { content: \"gbp\", name: \"GBP - Funt szterling\", rate: 0.19 },\r\n  ];\r\n\r\nexport default currencies;","import { useState, useRef } from \"react\";\r\nimport \"./style.css\";\r\nimport currencies from \"../../currencies\";\r\n\r\nconst Form = ({ calculateResult, clock }) => {\r\n   const [amount, setAmount] = useState(\"\");\r\n   const [selectedCurrency, setSelectedCurrency] = useState(currencies[0].content);\r\n   const [click, setClick] = useState(true);\r\n   const inputRef = useRef();\r\n\r\n   const onButtonClick = () => {\r\n      setClick(click => click)\r\n      if (click) {\r\n         inputRef.current.focus();\r\n      }\r\n   };\r\n\r\n   const onFormSubmit = (event) => {\r\n      event.preventDefault();\r\n      calculateResult(amount, selectedCurrency);\r\n      setAmount(\"\");\r\n   };\r\n\r\n   return (\r\n      <form\r\n         className=\"form\"\r\n         onSubmit={onFormSubmit}\r\n      >\r\n         {clock}\r\n         <fieldset className=\"form__fieldset\">\r\n            <legend className=\"form__legend\">\r\n               Przelicznik walut\r\n            </legend>\r\n            <p className=\"form__item\">\r\n               <label className=\"form__label\">\r\n                  <span className=\"form__labelText\">Podaj kwote (zł)*:</span>\r\n                  <input\r\n                     value={amount}\r\n                     onChange={({ target }) => setAmount(target.value)}\r\n                     autoFocus required\r\n                     className={`form__input${amount.length !== 0\r\n                        ? \" form__input--active\"\r\n                        : \"\"}`}\r\n                     type=\"number\" min=\"1\" step=\"any\"\r\n                     ref={inputRef}\r\n                  />\r\n               </label>\r\n            </p>\r\n            <p className=\"form__item form__item--select\">\r\n               <label className=\"form__label\">\r\n                  <span className=\"form__labelText\">\r\n                     Przelicz na:\r\n                  </span>\r\n                  <select\r\n                     className=\"form__select\"\r\n                     value={selectedCurrency}\r\n                     onChange={({ target }) => setSelectedCurrency(target.value)}\r\n                  >\r\n                     {currencies.map((currency) => (\r\n                        <option\r\n                           key={currency.content}\r\n                           value={currency.content}\r\n                        >\r\n                           {currency.name}\r\n                        </option>\r\n                     ))};\r\n                  </select>\r\n               </label>\r\n            </p>\r\n            <button\r\n               className=\"form__button\"\r\n               onClick={onButtonClick}\r\n            >\r\n               Przelicz\r\n            </button>\r\n         </fieldset>\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Result = ({ result, selectedRate }) => (\r\n   <div className=\"result\">\r\n      {result !== undefined && (\r\n         <>\r\n            <p className=\"result__main\">\r\n               {result.inputAmount.toFixed(2)} PLN = {result.outputAmount.toFixed(2)}{\" \"}\r\n               {result.selectedCurrency.toUpperCase()}\r\n            </p>\r\n            <p className=\"result__info\">\r\n               1 PLN =\r\n               <strong className=\"result__info result__info--rate\">\r\n                  {selectedRate(result.selectedCurrency)}{\" \"}\r\n                  {result.selectedCurrency.toUpperCase()}\r\n               </strong>, według średniego kursu NBP z dn.30.09.2021\r\n            </p>\r\n         </>\r\n      )}\r\n   </div>\r\n);\r\n\r\nexport default Result;","import { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const Clock = () => {\r\n   const [date, setDate] = useState(new Date());\r\n\r\n   useEffect(() => {\r\n      const intervalId = setInterval(() => {\r\n         setDate(new Date())\r\n      }, 1000);\r\n      return () => {\r\n         clearInterval(intervalId);\r\n      }\r\n   }, []);\r\n\r\n   return (\r\n      <p className=\"clock\">\r\n         Disiaj jest&nbsp;\r\n         {date.toLocaleString(\"pl\",\r\n            { weekday: \"long\" })},&nbsp;\r\n         {date.toLocaleString(\"pl\",\r\n            { day: \"numeric\", month: \"long\" })},&nbsp;\r\n         {date.toLocaleString(\"pl\",\r\n            { hour: \"numeric\", minute: \"numeric\", second: \"numeric\" })}\r\n      </p>\r\n   )\r\n};\r\n","import { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Calculator from \"./Calculator\";\nimport Form from \"./Calculator/Form\";\nimport Result from \"./Calculator/Result\";\nimport currencies from \"./currencies\";\nimport { Clock } from \"./Calculator/Form/Clock\";\n\nfunction App() {\n\n  const [result, setResult] = useState();\n\n  const selectedRate = (selectedCurrency) => currencies.find(\n    ({ content }) => content === selectedCurrency).rate;\n\n  const calculateResult = (amount, selectedCurrency) => {\n    setResult({\n      inputAmount: +amount,\n      outputAmount: amount * selectedRate(selectedCurrency),\n      selectedCurrency\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        title=\"Kalkulator walutowy\"\n      />\n\n      <Calculator\n        body={\n          <Form\n            clock={<Clock />}\n            calculateResult={calculateResult}\n            result={result}\n          />}\n\n        result={\n          <Result\n            result={result}\n            selectedRate={selectedRate}\n          />}\n      />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}